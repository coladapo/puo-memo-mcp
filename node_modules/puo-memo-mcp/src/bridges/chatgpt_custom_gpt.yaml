name: PUO Memo Assistant
description: >
  Access your PUO Memo knowledge base. Save memories, search with semantic understanding, 
  explore entity relationships, and attach files to your memories.

instructions: |
  You are PUO Memo Assistant, helping users interact with their personal knowledge base.
  
  Key capabilities:
  1. **Save memories** - Store any information with automatic deduplication
  2. **Search memories** - Use keyword, semantic, or entity-based search
  3. **Explore entities** - Navigate the knowledge graph of people, projects, technologies
  4. **Attach files** - Add documents, images, or links to existing memories
  
  When users want to save information:
  - Check for duplicates first (unless they specify force=true)
  - Suggest relevant tags based on content
  - Extract key entities automatically
  
  When searching:
  - Use semantic search for concepts and ideas
  - Use entity search for people, projects, or technologies
  - Show similarity scores to indicate relevance
  
  Always provide memory IDs so users can attach files or update memories later.

conversation_starters:
  - "Save this conversation about machine learning optimization"
  - "What do I know about Python projects?"
  - "Show me all memories related to Sarah Chen"
  - "Find my notes on authentication systems"

capabilities:
  code_interpreter: false
  browsing: false
  image_generation: false

actions:
  - name: create_memory
    description: Save new information to memory with deduplication
    url: http://localhost:8001/memory
    method: POST
    authentication:
      type: bearer
      token: ${CHATGPT_BRIDGE_API_KEY}
    headers:
      Content-Type: application/json
    body:
      content: 
        type: string
        required: true
        description: The information to remember
      title:
        type: string
        required: false
        description: Optional title for the memory
      tags:
        type: array
        required: false
        description: Tags for categorization
      force:
        type: boolean
        required: false
        default: false
        description: Skip duplicate check if true
      dedup_window:
        type: integer
        required: false
        default: 300
        description: Time window in seconds to check for duplicates
      merge_strategy:
        type: string
        required: false
        default: smart
        enum: [smart, append, replace]
        description: How to merge if duplicate found

  - name: search_memories
    description: Search and retrieve memories
    url: http://localhost:8001/recall
    method: POST
    authentication:
      type: bearer
      token: ${CHATGPT_BRIDGE_API_KEY}
    headers:
      Content-Type: application/json
    body:
      query:
        type: string
        required: false
        default: ""
        description: Search query (empty for recent memories)
      limit:
        type: integer
        required: false
        default: 10
        description: Maximum number of results
      search_type:
        type: string
        required: false
        default: hybrid
        enum: [keyword, semantic, hybrid, entity]
        description: Type of search to perform

  - name: explore_entities
    description: List entities or explore entity relationships
    url: http://localhost:8001/entities
    method: POST
    authentication:
      type: bearer
      token: ${CHATGPT_BRIDGE_API_KEY}
    headers:
      Content-Type: application/json
    body:
      entity_name:
        type: string
        required: false
        description: Specific entity to explore (leave empty to list all)
      entity_type:
        type: string
        required: false
        enum: [person, organization, location, event, project, technology, concept, document, other]
        description: Filter entities by type
      depth:
        type: integer
        required: false
        default: 2
        description: How deep to traverse entity relationships

  - name: attach_files
    description: Attach files to an existing memory
    url: http://localhost:8001/attach
    method: POST
    authentication:
      type: bearer
      token: ${CHATGPT_BRIDGE_API_KEY}
    headers:
      Content-Type: application/json
    body:
      memory_id:
        type: string
        required: true
        description: ID of the memory to attach files to
      file_paths:
        type: array
        required: true
        description: List of file paths or URLs to attach
      descriptions:
        type: array
        required: false
        description: Optional descriptions for each file