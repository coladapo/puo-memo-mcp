name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 1.0.0)'
        required: true
        type: string
      prerelease:
        description: 'Is this a pre-release?'
        required: false
        type: boolean
        default: false

permissions:
  contents: write
  packages: write
  id-token: write

jobs:
  prepare-release:
    name: Prepare Release
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      changelog: ${{ steps.changelog.outputs.changelog }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Validate version
        id: version
        run: |
          VERSION="${{ github.event.inputs.version }}"
          if ! [[ "$VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9]+)?$ ]]; then
            echo "Invalid version format: $VERSION"
            exit 1
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      
      - name: Generate changelog
        id: changelog
        run: |
          # Generate changelog from commits
          CHANGELOG=$(git log --pretty=format:"- %s (%h)" $(git describe --tags --abbrev=0)..HEAD)
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

  build-and-test:
    name: Build and Test
    needs: prepare-release
    uses: ./.github/workflows/ci-cd.yml
    secrets: inherit

  create-release:
    name: Create Release
    needs: [prepare-release, build-and-test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Update version
        run: |
          npm version ${{ needs.prepare-release.outputs.version }} --no-git-tag-version
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add package.json package-lock.json
          git commit -m "chore: bump version to ${{ needs.prepare-release.outputs.version }}"
      
      - name: Build packages
        run: |
          npm ci
          npm run build || echo "No build script"
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.prepare-release.outputs.version }}
          name: Release v${{ needs.prepare-release.outputs.version }}
          body: |
            ## What's Changed
            ${{ needs.prepare-release.outputs.changelog }}
            
            ## Docker Images
            ```bash
            docker pull ghcr.io/${{ github.repository }}:${{ needs.prepare-release.outputs.version }}
            ```
            
            ## Installation
            ```bash
            npm install -g puo-memo-mcp-client@${{ needs.prepare-release.outputs.version }}
            ```
          draft: false
          prerelease: ${{ github.event.inputs.prerelease }}
      
      - name: Publish to NPM
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        if: ${{ !github.event.inputs.prerelease }}

  deploy-production:
    name: Deploy to Production
    needs: create-release
    if: ${{ !github.event.inputs.prerelease }}
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v4
      
      - name: Deploy to production
        run: |
          echo "Deploying version ${{ needs.prepare-release.outputs.version }} to production..."
          # Add production deployment commands here