name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 8.0.0)'
        required: true
        type: string

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      packages: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests
        run: npm test
        env:
          PURMEMO_API_KEY: ${{ secrets.PURMEMO_API_KEY }}
      
      - name: Get version
        id: get_version
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
          fi
      
      - name: Update package version
        run: |
          npm version ${{ steps.get_version.outputs.VERSION }} --no-git-tag-version
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add package.json package-lock.json
          git commit -m "chore: bump version to ${{ steps.get_version.outputs.VERSION }}" || true
      
      - name: Build package
        run: |
          echo "Building package..."
          # Add any build steps here if needed
      
      - name: Publish to NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Generate changelog
        id: changelog
        run: |
          echo "# Release v${{ steps.get_version.outputs.VERSION }}" > RELEASE_NOTES.md
          echo "" >> RELEASE_NOTES.md
          echo "## ðŸš€ What's New" >> RELEASE_NOTES.md
          echo "" >> RELEASE_NOTES.md
          
          # Extract recent commits
          git log --pretty=format:"- %s (%h)" -n 10 >> RELEASE_NOTES.md
          
          echo "" >> RELEASE_NOTES.md
          echo "## ðŸ“¦ Installation" >> RELEASE_NOTES.md
          echo "" >> RELEASE_NOTES.md
          echo "\`\`\`bash" >> RELEASE_NOTES.md
          echo "npm install purmemo-mcp@${{ steps.get_version.outputs.VERSION }}" >> RELEASE_NOTES.md
          echo "\`\`\`" >> RELEASE_NOTES.md
          
          echo "" >> RELEASE_NOTES.md
          echo "## ðŸ§ª Testing" >> RELEASE_NOTES.md
          echo "" >> RELEASE_NOTES.md
          echo "- Production tests: âœ… Passing" >> RELEASE_NOTES.md
          echo "- Brutal honesty tests: 71% pass rate" >> RELEASE_NOTES.md
          
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.get_version.outputs.VERSION }}
          name: v${{ steps.get_version.outputs.VERSION }} - Ultimate Server
          body_path: RELEASE_NOTES.md
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Update latest tag
        run: |
          git tag -f latest
          git push origin latest --force